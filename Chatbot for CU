{"cells":[{"cell_type":"markdown","metadata":{"id":"uYbKOXgKLgNd"},"source":["**Importing Libraries**"]},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":1962,"status":"ok","timestamp":1695482326941,"user":{"displayName":"Shruti Narad","userId":"05975825388184983925"},"user_tz":-330},"id":"Zme68irALrTF"},"outputs":[],"source":["import numpy as np\n","import nltk#nlp model\n","import string\n","import random"]},{"cell_type":"markdown","metadata":{"id":"zh4-GGvrKlvc"},"source":["**IMPORTING AND READING CORPUS**"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10506,"status":"ok","timestamp":1695482339096,"user":{"displayName":"Shruti Narad","userId":"05975825388184983925"},"user_tz":-330},"id":"c5HHtmosKsw9","outputId":"bdbdc2a6-b22a-4808-f908-ff37d0a502ed"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n"]}],"source":["f=open('Chatbot_Notepad.txt','r', errors ='ignore')\n","raw_doc=f.read()\n","raw_doc=raw_doc.lower()\n","\n","from nltk.stem import WordNetLemmatizer\n","nltk.download('popular', quiet=True) # for downloading packages\n","nltk.download('punkt') # first-time use only\n","nltk.download('wordnet') # first-time use only\n","sent_tokens = nltk.sent_tokenize(raw_doc)#sentance token\n","word_tokens = nltk.word_tokenize(raw_doc) #word tokens"]},{"cell_type":"markdown","metadata":{"id":"598hqgsSMTbs"},"source":["**now exapmle of sentence tokens and word tokens:**"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":470,"status":"ok","timestamp":1695482342412,"user":{"displayName":"Shruti Narad","userId":"05975825388184983925"},"user_tz":-330},"id":"FYB3PlyMMZDu","outputId":"d795421d-9d17-474e-8df5-058f03852c81"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['welcome', 'to', 'chatbot', 'which', 'is', 'useful', 'for']"]},"metadata":{},"execution_count":3}],"source":["sent_tokens[:4]\n","word_tokens[:7]\n"]},{"cell_type":"markdown","metadata":{"id":"yn9TidzGMhY4"},"source":["**TEXT PREPROCESSING AND LEMMATIZATION**"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1695482345076,"user":{"displayName":"Shruti Narad","userId":"05975825388184983925"},"user_tz":-330},"id":"em5VETWyMkt7"},"outputs":[],"source":["lemmer=nltk.stem.WordNetLemmatizer()\n","def LemTokens(tokens):\n"," return[lemmer.lemmatize(token) for token in tokens]\n","remove_punct_dict= dict((ord(punct),None) for punct in string.punctuation)\n","def LemNormalize(text):\n"," return LemTokens(nltk.word_tokenize(text.lower().translate(remove_punct_dict)))"]},{"cell_type":"markdown","metadata":{"id":"2BPyFjStMrhD"},"source":["**DEFINING GREETING FUNCTION**"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":417,"status":"ok","timestamp":1695482348088,"user":{"displayName":"Shruti Narad","userId":"05975825388184983925"},"user_tz":-330},"id":"b6o28JDzMqG5"},"outputs":[],"source":["GREET_INPUTS=(\"hello\",\"hi\",\"sup\",\"greetings\",\"what's up\",\"hey\")\n","GREET_RESPONSES=[\"hi\",\"hello\",\"hi there\",\"nods\",\"I am glad! you are talking to me\", \"hey\"]\n","\n","def greet(sentence):\n"," for word in sentence.split():\n","  if word.lower() in GREET_INPUTS:\n","   return random.choice(GREET_RESPONSES)"]},{"cell_type":"markdown","metadata":{"id":"jzDU585vM1pJ"},"source":["**RESPONSE GENERATION**"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":438,"status":"ok","timestamp":1695482350793,"user":{"displayName":"Shruti Narad","userId":"05975825388184983925"},"user_tz":-330},"id":"7MAfQG1YM6M5"},"outputs":[],"source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.metrics.pairwise import cosine_similarity\n","def response(user_response):\n"," robo1_response=''\n"," TfidfVec = TfidfVectorizer(tokenizer=LemNormalize, stop_words='english')\n"," tfidf =TfidfVec.fit_transform(sent_tokens)\n"," vals = cosine_similarity(tfidf[-1], tfidf)\n"," idx=vals.argsort()[0][-2]\n"," flat =vals.flatten()\n"," flat.sort()\n"," req_tifidf=flat[-2]\n"," if(req_tifidf==0):\n","  robo1_response=robo1_response + \"I am sorry! I didn't get that\"\n","  return robo1_response\n","\n"," else:\n","  robo1_response= robo1_response+sent_tokens[idx]\n","  return robo1_response"]},{"cell_type":"markdown","metadata":{"id":"Kpm7r5BIRsRm"},"source":["**DEFINING CHAT START/END PROTOCOL**"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":636},"id":"xNFPltENRwJR","executionInfo":{"status":"error","timestamp":1695482449006,"user_tz":-330,"elapsed":94265,"user":{"displayName":"Shruti Narad","userId":"05975825388184983925"}},"outputId":"d4a46860-d1c3-41f5-e624-c1764acc215b"},"outputs":[{"output_type":"stream","name":"stdout","text":["BOT: My name is chatbot. Lets have a conversationa!,if you want to exit anytime just type bye!\n","hello\n","BOT: hi there sir/mam\n","how are you\n","BOT: "]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/feature_extraction/text.py:528: UserWarning: The parameter 'token_pattern' will not be used since 'tokenizer' is not None'\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/feature_extraction/text.py:409: UserWarning: Your stop_words may be inconsistent with your preprocessing. Tokenizing the stop words generated tokens ['ha', 'le', 'u', 'wa'] not in stop_words.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["I am sorry! I didn't get that\n","creater\n","BOT: what is university id of creater?\n","shruti\n","BOT: creater is shruti manohar narad.\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-e6de9acc87fb>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"BOT: My name is chatbot. Lets have a conversationa!,if you want to exit anytime just type bye!\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mwhile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflag\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m   \u001b[0muser_response\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m   \u001b[0muser_response\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0muser_response\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlower\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m   \u001b[0;32mif\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muser_response\u001b[0m\u001b[0;34m!=\u001b[0m\u001b[0;34m'bye'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}],"source":["flag=True\n","print(\"BOT: My name is chatbot. Lets have a conversationa!,if you want to exit anytime just type bye!\")\n","while(flag==True):\n","  user_response= input()\n","  user_response= user_response.lower()\n","  if(user_response!='bye'):\n","    if(user_response=='thanks'or user_response=='thank you'):\n","      flag=False\n","      print(\"BOT:your welcome.\")\n","    else:\n","        if(greet(user_response)!=None):\n","          print(\"BOT: \"+greet(user_response)+\" sir/mam\")\n","        else:\n","          sent_tokens.append(user_response)\n","          word_tokens=word_tokens+nltk.word_tokenize(user_response)\n","          final_words=list(set(word_tokens))\n","          print(\"BOT: \", end=\"\")\n","          print(response(user_response))\n","          sent_tokens.remove(user_response)\n","\n","  else:\n","        flag=False\n"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMcsxL161p/Gqk/q9kNv0hf"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}